#include "doctest.h"

#include <maze.h>

#include <sstream>

using namespace AdventOfCode;

TEST_CASE("Simple maze 1") {
  std::stringstream map;
  map << "         A           \n"
         "         A           \n"
         "  #######.#########  \n"
         "  #######.........#  \n"
         "  #######.#######.#  \n"
         "  #######.#######.#  \n"
         "  #######.#######.#  \n"
         "  #####  B    ###.#  \n"
         "BC...##  C    ###.#  \n"
         "  ##.##       ###.#  \n"
         "  ##...DE  F  ###.#  \n"
         "  #####    G  ###.#  \n"
         "  #########.#####.#  \n"
         "DE..#######...###.#  \n"
         "  #.#########.###.#  \n"
         "FG..#########.....#  \n"
         "  ###########.#####  \n"
         "             Z       \n"
         "             Z       \n";

  Maze maze(map);
  auto steps = maze.shortestPath();
  int expected = 23;
  REQUIRE(steps == expected);
}


TEST_CASE("Simple maze 2") {
  std::stringstream map;
  map << 

"                   A               \n"
"                   A               \n"
"  #################.#############  \n"
"  #.#...#...................#.#.#  \n"
"  #.#.#.###.###.###.#########.#.#  \n"
"  #.#.#.......#...#.....#.#.#...#  \n"
"  #.#########.###.#####.#.#.###.#  \n"
"  #.............#.#.....#.......#  \n"
"  ###.###########.###.#####.#.#.#  \n"
"  #.....#        A   C    #.#.#.#  \n"
"  #######        S   P    #####.#  \n"
"  #.#...#                 #......VT\n"
"  #.#.#.#                 #.#####  \n"
"  #...#.#               YN....#.#  \n"
"  #.###.#                 #####.#  \n"
"DI....#.#                 #.....#  \n"
"  #####.#                 #.###.#  \n"
"ZZ......#               QG....#..AS\n"
"  ###.###                 #######  \n"
"JO..#.#.#                 #.....#  \n"
"  #.#.#.#                 ###.#.#  \n"
"  #...#..DI             BU....#..LF\n"
"  #####.#                 #.#####  \n"
"YN......#               VT..#....QG\n"
"  #.###.#                 #.###.#  \n"
"  #.#...#                 #.....#  \n"
"  ###.###    J L     J    #.#.###  \n"
"  #.....#    O F     P    #.#...#  \n"
"  #.###.#####.#.#####.#####.###.#  \n"
"  #...#.#.#...#.....#.....#.#...#  \n"
"  #.#####.###.###.#.#.#########.#  \n"
"  #...#.#.....#...#.#.#.#.....#.#  \n"
"  #.###.#####.###.###.#.#.#######  \n"
"  #.#.........#...#.............#  \n"
"  #########.###.###.#############  \n"
"           B   J   C               \n"
"           U   P   P               \n";

  Maze maze(map);
  auto steps = maze.shortestPath();
  int expected = 58;
  REQUIRE(steps == expected);
}